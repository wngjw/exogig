/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
 /* tslint:disable */

import * as import0 from './DynamicDirective';
import * as import1 from '@angular/core/src/change_detection/change_detection';
import * as import2 from '@angular/core/src/linker/view_utils';
import * as import3 from '@angular/core/src/linker/view';
export class Wrapper_DynamicDirective {
  context:import0.DynamicDirective;
  changed:boolean;
  /*private*/ _componentType:any;
  /*private*/ _componentTemplate:any;
  /*private*/ _componentContext:any;
  /*private*/ _componentTemplateUrl:any;
  /*private*/ _componentDefaultTemplate:any;
  /*private*/ _componentRemoteTemplateFactory:any;
  /*private*/ _componentModules:any;
  constructor(p0:any,p1:any,p2:any,p3:any) {
    this.changed = false;
    this._componentType = import1.UNINITIALIZED;
    this._componentTemplate = import1.UNINITIALIZED;
    this._componentContext = import1.UNINITIALIZED;
    this._componentTemplateUrl = import1.UNINITIALIZED;
    this._componentDefaultTemplate = import1.UNINITIALIZED;
    this._componentRemoteTemplateFactory = import1.UNINITIALIZED;
    this._componentModules = import1.UNINITIALIZED;
    this.context = new import0.DynamicDirective(p0,p1,p2,p3);
  }
  check_componentType(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._componentType,currValue))) {
      this.changed = true;
      this.context.componentType = currValue;
      this._componentType = currValue;
    }
  }
  check_componentTemplate(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._componentTemplate,currValue))) {
      this.changed = true;
      this.context.componentTemplate = currValue;
      this._componentTemplate = currValue;
    }
  }
  check_componentContext(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._componentContext,currValue))) {
      this.changed = true;
      this.context.componentContext = currValue;
      this._componentContext = currValue;
    }
  }
  check_componentTemplateUrl(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._componentTemplateUrl,currValue))) {
      this.changed = true;
      this.context.componentTemplateUrl = currValue;
      this._componentTemplateUrl = currValue;
    }
  }
  check_componentDefaultTemplate(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._componentDefaultTemplate,currValue))) {
      this.changed = true;
      this.context.componentDefaultTemplate = currValue;
      this._componentDefaultTemplate = currValue;
    }
  }
  check_componentRemoteTemplateFactory(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._componentRemoteTemplateFactory,currValue))) {
      this.changed = true;
      this.context.componentRemoteTemplateFactory = currValue;
      this._componentRemoteTemplateFactory = currValue;
    }
  }
  check_componentModules(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._componentModules,currValue))) {
      this.changed = true;
      this.context.componentModules = currValue;
      this._componentModules = currValue;
    }
  }
  detectChangesInternal(view:import3.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this.changed;
    this.changed = false;
    return changed;
  }
}